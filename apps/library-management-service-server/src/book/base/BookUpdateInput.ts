/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { Type } from "class-transformer";
import { LibraryWhereUniqueInput } from "../../library/base/LibraryWhereUniqueInput";
import { LoanUpdateManyWithoutBooksInput } from "./LoanUpdateManyWithoutBooksInput";

@InputType()
class BookUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  author?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  isbn?: string | null;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  category?: CategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LibraryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LibraryWhereUniqueInput)
  @IsOptional()
  @Field(() => LibraryWhereUniqueInput, {
    nullable: true,
  })
  library?: LibraryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LoanUpdateManyWithoutBooksInput,
  })
  @ValidateNested()
  @Type(() => LoanUpdateManyWithoutBooksInput)
  @IsOptional()
  @Field(() => LoanUpdateManyWithoutBooksInput, {
    nullable: true,
  })
  loans?: LoanUpdateManyWithoutBooksInput;
}

export { BookUpdateInput as BookUpdateInput };
